#!/usr/bin/env python

import build_scripts.mono_configure as mono_configure

Import("env")
Import("env_modules")

env_mono = env_modules.Clone()

if env_mono["tools"] or env_mono["target"] != "release":
    env_mono.Append(CPPDEFINES=["GD_MONO_HOT_RELOAD"])

# Configure Mono

mono_configure.configure(env, env_mono)

# Add sources

env_mono.add_source_files(env.modules_sources, "*.cpp")
env_mono.add_source_files(env.modules_sources, "glue/*.cpp")
env_mono.add_source_files(env.modules_sources, "glue/mono_glue.gen.cpp")
env_mono.add_source_files(env.modules_sources, "mono_gd/*.cpp")
env_mono.add_source_files(env.modules_sources, "utils/*.cpp")

env_mono.add_source_files(env.modules_sources, "mono_gd/support/*.cpp")

if env["platform"] in ["macos", "ios"]:
    env_mono.add_source_files(env.modules_sources, "mono_gd/support/*.mm")
    env_mono.add_source_files(env.modules_sources, "mono_gd/support/*.m")
elif env["platform"] == "android":
    env_mono.add_source_files(env.modules_sources, "mono_gd/android_mono_config.gen.cpp")

if env["tools"]:
    env_mono.add_source_files(env.modules_sources, "editor/*.cpp")
    SConscript("editor/script_templates/SCsub")
